name: Test Release
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build-linux:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Load cache
      id: build-cache
      uses: actions/cache@v3
      env:
        cache-name: cache dependencies & build
      with:
        path: |
          ${{ github.workspace }}/build-release
          ~/.cache/vcpkg/archives
          ${{ github.workspace }}/vcpkg_installed
          ${{ github.workspace }}/vcpkg
        key: ${{ runner.os }}-build-release-${{ github.event.repository.name }}-${{ env.cache-name }}

    - name: Run vcpkg
      run: |
        if [ ! -d "vcpkg/.git" ]; then
          git clone https://github.com/microsoft/vcpkg.git vcpkg
          ./vcpkg/bootstrap-vcpkg.sh -disableMetrics
        fi
        ./vcpkg/vcpkg install

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_TOOLCHAIN_FILE=./vcpkg/scripts/buildsystems/vcpkg.cmake -DBS_BUILD_TESTS=ON

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --target bs_tests

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest -C ${{env.BUILD_TYPE}}
      
