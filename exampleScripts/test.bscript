struct MyStruct {
    a: i32,
    b: f32
}

enum MyEnum {
    None,
    Float(f32),
    Int(i32)
}

fn add_enums(a: MyEnum, b: MyEnum) -> MyEnum {
    match(a) {
        None => return None;
        Float(a) => match(b) {
            None => return None;
            Float(b) => return add(a, b);
            Int(b) => return add(a, b);
        }
        Int(a) => match(b) {
            None => return None;
            Float(b) => return add(a, b);
            Int(b) => return add(a, b);
        }
    }
}

pipe add_structs(a: MyStruct, b: MyStruct) -> MyStruct [{
    return MyStruct {
        a: add_enums(a.a, b.a),
        b: add_enums(a.b, b.b)
    };
}]
